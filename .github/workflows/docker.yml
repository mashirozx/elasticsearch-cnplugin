name: Release Docker

# on:
#   push:
#     branches:
#       - main
on:
  release:
    types: [published]

jobs:
  docker-build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        platform: [amd64, arm64]

    steps:
      - name: üîç Checkout code
        uses: actions/checkout@v2
        
      - name: ü¶Ñ Set up Qemu for Docker
        uses: docker/setup-qemu-action@v1

      - name: üèóÔ∏è Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: üîë Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: ‚öì Build and push arm image
        uses: docker/build-push-action@v2
        with:
          context: .
          pull: true
          push: true
          platforms: linux/${{ matrix.platform }}
          cache-from: type=registry,ref=mashirozx/elasticsearch-cnplugin:${{ github.event.release.tag_name }}-${{ matrix.platform }}
          cache-to: type=inline
          tags:  mashirozx/elasticsearch-cnplugin:${{ github.event.release.tag_name }}-${{ matrix.platform }}
        if: ${{ matrix.platform == 'arm64' }}
        
        
      - name: ‚öì Build and push amd64 image
        uses: docker/build-push-action@v2
        with:
          context: .
          pull: true
          push: true
          platforms: linux/${{ matrix.platform }}
          cache-from: type=registry,ref=mashirozx/elasticsearch-cnplugin:${{ github.event.release.tag_name }}-${{ matrix.platform }}
          cache-to: type=inline
          tags: |
            mashirozx/elasticsearch-cnplugin:${{ github.event.release.tag_name }}-${{ matrix.platform }}
        if: ${{ matrix.platform == 'amd64' }}
        
      - name: ‚öì Build and push universal image
        uses: docker/build-push-action@v2
        with:
          context: .
          pull: true
          push: true
          platforms: linux/amd64, linux/arm64
          cache-from: type=registry,ref=mashirozx/elasticsearch-cnplugin:${{ github.event.release.tag_name }}
          cache-to: type=inline
          tags: |
            mashirozx/elasticsearch-cnplugin:${{ github.event.release.tag_name }}
            mashirozx/elasticsearch-cnplugin:latest
        if: ${{ matrix.platform == 'amd64' }}
